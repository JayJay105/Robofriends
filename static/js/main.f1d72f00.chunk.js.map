{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","className","alt","src","id","name","email","Cardlist","robots","cardComponent","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCcCQ,EAnBF,SAACC,GACV,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BACKH,EAAMI,GADX,cAErB,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCSXC,EAfE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACTC,EAAgBD,EAAOE,KAAI,SAACC,EAAKC,GACnC,OAAQ,cAAC,EAAD,CAEPR,GAAII,EAAOI,GAAGR,GACdC,KAAMG,EAAOI,GAAGP,KAChBC,MAAOE,EAAOI,GAAGN,OAHZM,MAMV,OACI,8BAAMH,KCCCI,EAZG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKb,UAAU,MAAf,SACA,uBAAOA,UAAU,sCACec,KAAK,SAASC,YAAY,gBAC1DC,SAAUH,OCSHI,G,MAZA,SAAClB,GAEZ,OACI,qBAAKmB,MAAO,CAACC,UAAU,SAAUC,OAAO,kBACxCC,OAAO,SADP,SAGEtB,EAAMuB,aC2CDC,G,wDA7CX,aAAe,IAAD,8BACV,gBAiBJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAjBzC,EAAKC,MAAQ,CACTvB,OAAO,GACPoB,YAAY,IAJN,E,qDASd,WAAqB,IAAD,OAChBI,MAAM,8CAA8CvC,MAAK,SAAAwC,GACrD,OAAOA,EAASC,UAEnBzC,MAAK,SAAA0C,GACF,EAAKR,SAAS,CAACnB,OAAO2B,S,oBAS9B,WACI,MAA6BC,KAAKL,MAA3BvB,EAAP,EAAOA,OAAQoB,EAAf,EAAeA,YACTS,EAAgB7B,EAAO8B,QAAO,SAAAC,GAChC,OAAOA,EAAMlC,KAAKmC,cAAcC,SAChCb,EAAYY,kBAGhB,OACI,sBAAKvC,UAAU,KAAf,UACA,oBAAIA,UAAU,QAAd,yBACA,cAAC,EAAD,CAAWa,aAAcsB,KAAKX,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUjB,OAAQ6B,a,GApCZK,IAAMC,YCAxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAIFC,SAASC,eAAe,SAM1B1D,M","file":"static/js/main.f1d72f00.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card = (props) => {\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robots' src \n            ={`https://robohash.org/${props.id}?200x200`}/>\n            <div>\n                <h1>{props.name}</h1>\n                <p>{props.email}</p>\n            </div>\n        </div>\n    );\n}\n\n\n\n\n\n\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst Cardlist = ({robots}) => {\n    const cardComponent = robots.map((user,i) => {\n        return( <Card\n         key={i}\n         id={robots[i].id} \n         name={robots[i].name} \n         email={robots[i].email} />\n        );\n    })\n    return (\n        <div>{cardComponent}</div>\n    \n    );\n}\n\nexport default Cardlist","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n    return (\n        <div className=\"pa2\">\n        <input className='pa3 \n        3 ba b--green bg-lightest-blue' type='search' placeholder=\"search robots\"\n        onChange={searchChange}\n          />\n        \n        </div>\n    );\n}\n\nexport default SearchBox;","\nimport { div } from 'prelude-ls';\nimport React from 'react';\n\nconst Scroll = (props) => {\n\n    return ( \n        <div style={{overflowY:'scroll', border:'5px solid black',\n        height:'500px'}}>\n\n         {props.children}\n        </div>\n\n    )\n}\n\nexport default Scroll;","import React from 'react';\nimport Cardlist from '../components/Cardlist';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css'\n\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            robots:[],\n            searchfield:''\n        }\n\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users').then(response => {\n            return response.json()\n        })\n        .then(users => {\n            this.setState({robots:users})\n        })\n    }\n\n    onSearchChange = (event) => { \n        this.setState({searchfield: event.target.value})\n        \n\n    }\n    render() {\n        const {robots, searchfield} =this.state;\n        const filteredRobots =robots.filter(robot => {\n            return robot.name.toLowerCase().includes(\n            searchfield.toLowerCase());\n        })\n      \n        return (\n            <div className='tc'>\n            <h1 className=\"title\">Robofriends</h1>\n            <SearchBox searchChange={this.onSearchChange}/>\n            <Scroll>\n            <Cardlist robots={filteredRobots}/>\n            </Scroll>\n            </div>\n            \n        );\n\n    }\n}\n    \n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n   \n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}